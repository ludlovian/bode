{"version":3,"file":"index.js","sources":["../src/internals.js","../src/index.js"],"sourcesContent":["const kStatus = Symbol('status')\nconst kValue = Symbol('value')\nconst kFNotify = Symbol('fNotify')\nconst kRNotify = Symbol('rNotify')\nconst PENDING = Symbol('pending')\nconst FULFILLED = Symbol('fulfilled')\nconst REJECTED = Symbol('rejected')\n\nexport function initialise (p) {\n  p[kStatus] = PENDING\n  p[kValue] = undefined\n  p[kFNotify] = undefined\n  p[kRNotify] = undefined\n}\n\nexport function runResolver (resolver, p) {\n  try {\n    resolver(resolve, reject)\n  } catch (err) {\n    reject(err)\n  }\n\n  function resolve (v) {\n    if (!p) return\n    resolvePromise(p, v)\n    p = undefined\n  }\n\n  function reject (r) {\n    if (!p) return\n    rejectPromise(p, r)\n    p = undefined\n  }\n}\n\nfunction rejectPromise (p, reason) {\n  p[kStatus] = REJECTED\n  p[kValue] = reason\n  if (p[kRNotify]) p[kRNotify](reason)\n  p[kFNotify] = p[kRNotify] = undefined\n}\n\nfunction resolvePromise (p, value) {\n  if (p === value) {\n    return rejectPromise(p, new TypeError('self-resolve'))\n  }\n\n  const vt = typeof value\n  if (value && (vt === 'function' || vt === 'object')) {\n    if (kStatus in value) return connectPromises(value, p)\n\n    let then\n    try {\n      then = value.then\n    } catch (err) {\n      return rejectPromise(p, err)\n    }\n    if (typeof then === 'function') {\n      return runResolver(then.bind(value), p)\n    }\n  }\n  p[kStatus] = FULFILLED\n  p[kValue] = value\n  if (p[kFNotify]) p[kFNotify](value)\n  p[kFNotify] = p[kRNotify] = undefined\n}\n\nexport function connectPromises (parent, child, fHandler, rHandler) {\n  fHandler = makeHandler(fHandler, child) || (v => resolvePromise(child, v))\n  rHandler = makeHandler(rHandler, child) || (r => rejectPromise(child, r))\n  if (parent[kStatus] === PENDING) {\n    parent[kFNotify] = addHandler(parent[kFNotify], fHandler)\n    parent[kRNotify] = addHandler(parent[kRNotify], rHandler)\n  } else if (parent[kStatus] === FULFILLED) {\n    fHandler(parent[kValue])\n  } else {\n    rHandler(parent[kValue])\n  }\n}\n\nfunction makeHandler (fn, p) {\n  if (typeof fn !== 'function') return\n  return v =>\n    asap(() => {\n      try {\n        resolvePromise(p, fn(v))\n      } catch (err) {\n        rejectPromise(p, err)\n      }\n    })\n}\n\nfunction addHandler (chain, fn) {\n  if (!chain) return fn\n  return v => {\n    chain(v)\n    fn(v)\n  }\n}\n\nconst queue = []\nfunction asap (fn) {\n  if (queue.push(fn) === 1) setImmediate(processAsapQueue)\n}\n\nfunction processAsapQueue () {\n  while (queue.length) queue.shift()()\n}\n","import { initialise, connectPromises, runResolver } from './internals'\n\nexport default class Bode {\n  constructor (resolver) {\n    if (typeof resolver !== 'function') {\n      throw new TypeError('bad resolver')\n    }\n    initialise(this)\n    runResolver(resolver, this)\n  }\n\n  then (onFulfilled, onRejected) {\n    const child = Object.create(Bode.prototype)\n    initialise(child)\n    connectPromises(this, child, onFulfilled, onRejected)\n    return child\n  }\n\n  finally (handler) {\n    return this.then(\n      v => {\n        handler()\n        return v\n      },\n      r => {\n        handler()\n        throw r\n      }\n    )\n  }\n\n  static resolve (value) {\n    const Factory = this\n    return new Factory(resolve => resolve(value))\n  }\n\n  static reject (reason) {\n    const Factory = this\n    return new Factory((resolve, reject) => reject(reason))\n  }\n\n  static all (iterable) {\n    const Factory = this\n    const result = []\n    return new Factory((resolve, reject) => {\n      let n = 0\n      for (const el of iterable) {\n        resolveElement(el, n++)\n      }\n      if (!n) resolve(result)\n\n      function resolveElement (el, idx) {\n        Factory.resolve(el).then(value => {\n          result[idx] = value\n          if (!--n) resolve(result)\n        }, reject)\n      }\n    })\n  }\n\n  static race (iterable) {\n    const Factory = this\n    return new Factory((resolve, reject) => {\n      for (const el of iterable) {\n        Factory.resolve(el).then(resolve, reject)\n      }\n    })\n  }\n}\n"],"names":["kStatus","Symbol","kValue","kFNotify","kRNotify","PENDING","FULFILLED","REJECTED","initialise","p","undefined","runResolver","resolver","v","resolvePromise","reject","err","r","rejectPromise","reason","value","TypeError","vt","connectPromises","then","bind","parent","child","fHandler","rHandler","makeHandler","addHandler","fn","queue","push","setImmediate","processAsapQueue","asap","chain","length","shift","this","onFulfilled","onRejected","Object","create","Bode","prototype","handler","resolve","all","iterable","Factory","result","n","resolveElement","el","idx","race"],"mappings":"qzBAAA,IAAMA,EAAUC,OAAO,UACjBC,EAASD,OAAO,SAChBE,EAAWF,OAAO,WAClBG,EAAWH,OAAO,WAClBI,EAAUJ,OAAO,WACjBK,EAAYL,OAAO,aACnBM,EAAWN,OAAO,qBAERO,EAAYC,GAC1BA,EAAET,GAAWK,EACbI,EAAEP,QAAUQ,EACZD,EAAEN,QAAYO,EACdD,EAAEL,QAAYM,WAGAC,EAAaC,EAAUH,GACrC,IACEG,EAKF,SAAkBC,GACXJ,IACLK,EAAeL,EAAGI,GAClBJ,OAAIC,IARcK,GAClB,MAAOC,GACPD,EAAOC,GAST,SAASD,EAAQE,GACVR,IACLS,EAAcT,EAAGQ,GACjBR,OAAIC,IAIR,SAASQ,EAAeT,EAAGU,GACzBV,EAAET,GAAWO,EACbE,EAAEP,GAAUiB,EACRV,EAAEL,IAAWK,EAAEL,GAAUe,GAC7BV,EAAEN,GAAYM,EAAEL,QAAYM,EAG9B,SAASI,EAAgBL,EAAGW,GAC1B,GAAIX,IAAMW,EACR,OAAOF,EAAcT,EAAG,IAAIY,UAAU,iBAGxC,IAAMC,SAAYF,EAClB,GAAIA,IAAiB,aAAPE,GAA4B,WAAPA,GAAkB,CACnD,GAAItB,KAAWoB,EAAO,OAAOG,EAAgBH,EAAOX,GAEpD,IAAIe,EACJ,IACEA,EAAOJ,EAAMI,KACb,MAAOR,GACP,OAAOE,EAAcT,EAAGO,GAE1B,GAAoB,mBAATQ,EACT,OAAOb,EAAYa,EAAKC,KAAKL,GAAQX,GAGzCA,EAAET,GAAWM,EACbG,EAAEP,GAAUkB,EACRX,EAAEN,IAAWM,EAAEN,GAAUiB,GAC7BX,EAAEN,GAAYM,EAAEL,QAAYM,WAGda,EAAiBG,EAAQC,EAAOC,EAAUC,GACxDD,EAAWE,EAAYF,EAAUD,IAAW,SAAAd,UAAKC,EAAea,EAAOd,IACvEgB,EAAWC,EAAYD,EAAUF,IAAW,SAAAV,UAAKC,EAAcS,EAAOV,IAClES,EAAO1B,KAAaK,GACtBqB,EAAOvB,GAAY4B,EAAWL,EAAOvB,GAAWyB,GAChDF,EAAOtB,GAAY2B,EAAWL,EAAOtB,GAAWyB,IACvCH,EAAO1B,KAAaM,EAC7BsB,EAASF,EAAOxB,IAEhB2B,EAASH,EAAOxB,IAIpB,SAAS4B,EAAaE,EAAIvB,GACxB,GAAkB,mBAAPuB,EACX,gBAAOnB,UAmBT,SAAemB,GACU,IAAnBC,EAAMC,KAAKF,IAAWG,aAAaC,GAnBrCC,CAAK,WACH,IACEvB,EAAeL,EAAGuB,EAAGnB,IACrB,MAAOG,GACPE,EAAcT,EAAGO,OAKzB,SAASe,EAAYO,EAAON,GAC1B,OAAKM,WACEzB,GACLyB,EAAMzB,GACNmB,EAAGnB,IAHcmB,EAOrB,IAAMC,EAAQ,GAKd,SAASG,IACP,KAAOH,EAAMM,QAAQN,EAAMO,OAANP,6BCvGrB,WAAarB,GACX,GAAwB,mBAAbA,EACT,UAAUS,UAAU,gBAEtBb,EAAWiC,MACX9B,EAAYC,EAAU6B,iCAGxBjB,KAAA,SAAMkB,EAAaC,GACjB,IAAMhB,EAAQiB,OAAOC,OAAOC,EAAKC,WAGjC,OAFAvC,EAAWmB,GACXJ,EAAgBkB,KAAMd,EAAOe,EAAaC,GACnChB,aAGT,SAASqB,GACP,YAAYxB,KACV,SAAAX,GAEE,OADAmC,IACOnC,GAET,SAAAI,GAEE,MADA+B,IACM/B,OAKLgC,QAAP,SAAgB7B,GAEd,WADgBqB,KACG,SAAAQ,UAAWA,EAAQ7B,QAGjCL,OAAP,SAAeI,GAEb,WADgBsB,KACG,SAACQ,EAASlC,UAAWA,EAAOI,QAG1C+B,IAAP,SAAYC,GACV,IAAMC,EAAUX,KACVY,EAAS,GACf,WAAWD,EAAQ,SAACH,EAASlC,GAE3B,IADA,MAAIuC,EAAI,MACSH,kBACfI,UAAmBD,KAIrB,SAASC,EAAgBC,EAAIC,GAC3BL,EAAQH,QAAQO,GAAIhC,KAAK,SAAAJ,GACvBiC,EAAOI,GAAOrC,IACPkC,GAAGL,EAAQI,IACjBtC,GANAuC,GAAGL,EAAQI,QAWbK,KAAP,SAAaP,GACX,IAAMC,EAAUX,KAChB,WAAWW,EAAQ,SAACH,EAASlC,GAC3B,cAAiBoC,kBACfC,EAAQH,iBAAYzB,KAAKyB,EAASlC"}